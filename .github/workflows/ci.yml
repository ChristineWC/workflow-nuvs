name: ci

on:
  pull_request:
    branches:
      - "*"
  push:
    branches:
      - "main"

jobs:
  commitlint:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: wagoid/commitlint-github-action@v4
  test:
    runs-on: ubuntu-20.04
    container:
      image: python:3.9-buster
    services:
      redis:
        image: redis:6.0
      mongo:
        image: mongo:4.4
    steps:
      - uses: actions/checkout@v2
      - name: Install Poetry
        run: pip install poetry
      - name: Install Bowtie2
        run: |
          wget https://github.com/BenLangmead/bowtie2/releases/download/v2.3.2/bowtie2-2.3.2-legacy-linux-x86_64.zip
          unzip bowtie2-2.3.2-legacy-linux-x86_64.zip
          cp bowtie2-2.3.2-legacy/bowtie2* /usr/local/bin
      - name: Install HMMER
        run: |
          wget http://eddylab.org/software/hmmer/hmmer-3.2.1.tar.gz
          tar -xf hmmer-3.2.1.tar.gz
          cd hmmer-3.2.1
          ./configure --prefix /hmmer
          make
          make install
      - name: Install SPAdes
        run: |
          wget https://github.com/ablab/spades/releases/download/v3.11.0/SPAdes-3.11.0-Linux.tar.gz
          tar -xvf SPAdes-3.11.0-Linux.tar.gz
          mv SPAdes-3.11.0-Linux /spades

      - name: Install Rust
        run: |
          curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
          echo "${HOME}/.cargo/bin" >> $GITHUB_PATH

      - name: Pigz
        run: |
          apt update
          apt-get install pigz -y

      - name: Install Dependencies
        run: |
          poetry install
          poetry run maturin build
          poetry add target/wheels/nuvs_rust*.whl


      - name: Run tests
        run: |
          export PATH=$PATH:/hmmer/bin
          export PATH=$PATH:/spades/bin
          poetry install
          poetry run pytest
  release:
    runs-on: ubuntu-20.04
    needs: [test, commitlint]
    if: github.event_name == 'push'
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup NodeJS
        uses: actions/setup-node@v1
        with:
          node-version: 14
      - name: Install semantic-release
        run: npm i semantic-release@v18.0.0 conventional-changelog-conventionalcommits@4.6.1
      - name: Release
        env:
          GITHUB_USERNAME: ${{ secrets.GH_USERNAME }}
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        run: npx semantic-release
